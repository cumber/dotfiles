" Pretty stuff
set guifont=Inconsolata\ 15
if has('gui_running')
    set guioptions-=T
    colorscheme google
else
    set t_Co=256
    colorscheme darkbone
endif

" Rainbow parentheses does nothing if this variable isn't set, so had
" to delay that plugin from loading
let g:rainbow_conf = {
\ 'separately': {
\   'haskell': {
\     'parentheses': [
\       'start=/(/ end=/)/',
\       'start=/\[/ end=/\]/',
\       'start=/{-\@!/ end=/-\@<!}/',
\     ]
\   }
\ }
\}
let g:rainbow_active = 1
call vam#Scripts([], {'tag_regex': 'delay'})

" Make it easy to move over lines
set whichwrap=b,s,<,>,[,]
set backspace=indent,eol,start

" Tab behaviour
set autoindent
set tabstop=4
set shiftwidth=4
set expandtab

" Visible tabs and trailing whitespace
set listchars=tab:»\ ,trail:·
set list

" Highlight searches, and clear highlight
set hlsearch
set incsearch
map <Leader>/ :nohlsearch<CR>

" Show line numbers
map <Leader>0 :set number!<CR>
set colorcolumn=81
set numberwidth=6
set number

" Add an 'open' command
map <silent> <Leader>o :Explore<CR>

" Override buffer settings for netrw so we have line numbers
let g:netrw_bufsettings = 'noma nomod number nobl nowrap ro'

set pastetoggle=<F11>

let g:haddock_browser = "chromium-browser"

" syntastic
map <silent> <Leader>e :Errors<CR>
map <silent> <leader>E :lcl<CR>
map <Leader>s :SyntasticToggleMode<CR>

" tagbar
map <silent> <Leader>= :TagbarToggle<CR>
let g:tagbar_autofocus = 1
let g:tagbar_autoclose = 1

" avoid double-indent in python files
let g:pyindent_open_paren = '&sw'
let g:pyindent_continue = '&sw'

" Get type or info of thing under cursor
au FileType haskell nnoremap <buffer> <F1> :HdevtoolsType<CR>
au FileType haskell nnoremap <buffer> <F2> :HdevtoolsClear<CR>
au FileType haskell nnoremap <buffer> <F3> :HdevtoolsInfo<CR>

if executable('lushtags')
    let g:tagbar_type_haskell = {
        \ 'ctagsbin' : 'lushtags',
        \ 'ctagsargs' : '--ignore-parse-error --',
        \ 'kinds' : [
            \ 'm:module:0',
            \ 'e:exports:1',
            \ 'i:imports:1',
            \ 't:declarations:0',
            \ 'd:declarations:1',
            \ 'n:declarations:1',
            \ 'f:functions:0',
            \ 'c:constructors:0'
        \ ],
        \ 'sro' : '.',
        \ 'kind2scope' : {
            \ 'd' : 'data',
            \ 'n' : 'newtype',
            \ 'c' : 'constructor',
            \ 't' : 'type'
        \ },
        \ 'scope2kind' : {
            \ 'data' : 'd',
            \ 'newtype' : 'n',
            \ 'constructor' : 'c',
            \ 'type' : 't'
        \ }
    \ }
endif
